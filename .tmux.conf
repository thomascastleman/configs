# Adapted from 
# - https://github.com/jonhoo/configs
# - https://github.com/shinelikastar/dot-files/blob/master/tmux.conf

# set scroll history to 100,000 lines
set-option -g history-limit 100000

# modern colors
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",alacritty:Tc"

# use zsh
set-option -g default-shell /bin/zsh

# unbind the prefix and bind it to Ctrl-a like screen
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# copy to X clipboard
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard &> /dev/null'
bind -T copy-mode-vi Enter send-keys -X cancel

# shortcut for moving tmux buffer to clipboard
# useful if you've selected with the mouse
bind-key -nr C-y run "tmux show-buffer | xclip -in -selection clipboard &> /dev/null"

# Avoid ESC delay
set -s escape-time 0

# Fix titlebar
set -g set-titles on
set -g set-titles-string "#T"

# VIM mode
set -g mode-keys vi

# Mouse friendly
set -g mouse on
set-option -g mouse on

# Move between panes with vi keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# switch panes using Alt + vi keys without prefix
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

######################
### DESIGN CHANGES ###
######################

# Avoid date/time taking up space
set -g status-right ''
set -g status-right-length 0

# status bar colors
set-option -g status-style bg=default # This allows for transparent status bar
set -g status-fg white

# border colours
set -g pane-border-style fg=gray
set -g pane-active-border-style "bg=default fg=gray"

# show command of each pane at top
# set -g pane-border-status top
# set -g pane-border-format "#{pane_index} #{pane_current_command}"

# number windows / panes starting from 1
set -g base-index 1
setw -g pane-base-index 1

# Use \ and - for vertical and horizontal splitting, respectively.
# Start new windows/panes from the current working directory
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %
bind c new-window -c "#{pane_current_path}"

# Use | and _ to split the entire display (not just current pane)
bind | split-window -hf -c "#{pane_current_path}"
bind _ split-window -vf -c "#{pane_current_path}"
